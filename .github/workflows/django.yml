name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.POSTGRES_PORT }}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options:  >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v4
        with:
          python-version: 3.11.5

      - name: Check the formatting
        uses: rickstaa/action-black@v1
        with:
            black_args: ". --check"
  
      - name: Check the linting
        uses: chartboost/ruff-action@v1
  
      - name: Install psycopg2 dependencies
        run: |
          sudo apt-get install libpq-dev -y
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Make envfile
        uses: SpicyPizza/create-envfile@v2.0
        with:
          envkey_SECRET_KEY: ${{ secrets.SECRET_KEY }}
          envkey_ALLOWED_HOSTS: ${{vars.ALLOWED_HOSTS}}
          envkey_POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          envkey_POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          envkey_POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
          envkey_POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          envkey_POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
  
      - name: Run Tests
          # Step specific environment variables
        run: |
            python manage.py test
            
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
  
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
  
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
            context: .
            push: true
            tags: ${{ secrets.DOCKERHUB_USERNAME }}/django:latest
  

  deploy:
    #needs: [ build-ci ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Try the cluster !
        run: kubectl get pods -A

      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetes/app-configmap.yml,kubernetes/app-secret.yml
          kubectl apply -f kubernetes/django.yml
          kubectl apply -f kubernetes/postgres.yml

      - name: Wait for pods to be ready
        run: |
          sleep 300
        #  kubectl wait --for=condition=Ready pods --all --timeout=300s

      - name: Test service URLs
        run: |
          minikube service list
          minikube service django-service --url
          echo "------------------opening the service------------------"
          curl $(minikube service django-service --url)
          
        
    

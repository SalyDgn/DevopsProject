name: Django CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build-ci:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options:  >-
          --health-cmd pg_isready 
          --health-interval 10s 
          --health-timeout 5s 
          --health-retries 5
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
  
      - name: Set up Python 3.11.5
        uses: actions/setup-python@v2
        with:
          python-version: 3.11.5
  
      - name: Install psycopg2 dependencies
        run: |
          sudo apt-get install libpq-dev -y
      
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
  
      - name: Check the formatting
        uses: rickstaa/action-black@v1
        with:
            black_args: ". --check"
  
      - name: Check the linting
        uses: chartboost/ruff-action@v1
  
      - name: Run Tests
          # Step specific environment variables
        env:
          SECRET_KEY: 'django-insecure-*b^1li0-z!xnsf_(j8r6$+-n4rb^yf--+syh##bumz9*dpuhao'
          ALLOWED_HOSTS: "*"
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST: localhost
          POSTGRES_PORT: 5432
        run: |
            python manage.py test
            
      - name: docker login
        env:
          DOCKER_USER: ${{secrets.DOCKERHUB_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKERHUB_TOKEN}}
        run: |
          docker login -u $DOCKERHUB_USERNAME -p $DOCKERHUB_TOKEN
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ${{ secrets.DOCKERHUB_USERNAME }}/django:latest
        
      - name: Docker Push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/django:latest
  

  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
        with:
          install_kubectl: true
  
      - name: Deploy to Kubernetes
        run: |
          kubectl apply -f kubernetess/postgres.yaml
          kubectl apply -f kubernetess/django.yaml
          
        working-directory: ..
        
    
